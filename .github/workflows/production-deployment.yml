name: Production build and deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [production]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "info"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: node:14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Build and Publish to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          BACKEND_URL: ${{ secrets.FRONTEND_PRODUCTION_PUBLIC_BACKEND_PRODUCTION_URL }}
        with:
          name: dedogmadao/dt-frontend/frontend_production
          registry: ghcr.io
          username: ${{ secrets.PRODUCTION_GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          buildargs: BACKEND_URL
          tags: latest
  
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy package to Server
        uses: fifsky/ssh-action@master
        with:
          command: |
            docker login ghcr.io -u dedogmadao -p $GITHUB_TOKEN
            docker pull ghcr.io/dedogmadao/dt-frontend/frontend_production:latest
            docker stop frontend
            docker system prune -f
            docker network create ddd_network || true
            docker run --name frontend -dit --network=ddd_network ghcr.io/dedogmadao/dt-frontend/frontend_production:latest
            docker exec -it frontend bash -c "echo $'User-agent: *\nAllow: /\n\nSitemap: https://dedogmadao.com/sitemap.xml' > ./public/robots.txt"
          host: ${{ secrets.FRONTEND_PRODUCTION_DEPLOY_HOST }}
          user: ${{ secrets.FRONTEND_PRODUCTION_DEPLOY_USER }}
          key: ${{ secrets.PRODUCTION_GITHUB_SSH_KEY }}
          port: ${{ secrets.PROD_SSH_ACTION_HOST }}